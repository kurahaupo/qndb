#!/bin/bash

. "${libdir:-$HOME/Quakers/lib/}"qlib.bash

inc=()

askyn() {
    local yn
    printf '%s? ' "$*"
    while
        read -rsn1 yn || return 2
        yn=${yn^}
        [[ $yn != [YN] ]]
    do
        [[ $yn = Q ]] && exit
    done
    printf '%s\n' "$yn"
    [[ $yn = Y ]]
}

opts=(
        --preset=avery-l7160
        --skip-suppressed-post
     )

(( true = 0==0,
   false = !true,
   ask = true,
   use_sql = false ))

for x do
    case $x in
    (dbi:*)             use_sql=true sql_dsn=$x ;;
    (--sql*)            opts+=( "$1" ) ; use_sql=true ;;
    (-*)                opts+=( "$1" ) ;;
    (ask)               (( ask = true  )) ;;
    (no?(-)ask)         (( ask = false )) ;;
    (nz-all)            inc+=(               --select='#all'                                ) ;;
    (nt-bayis|nt-boi)   inc+=(               --select='@listing - NT - Bay of Islands'      ) ;;
    (nt-hwick)          inc+=(               --select='@listing - NT - Howick'              ) ;;
    (nt-ktaia)          inc+=(               --select='@listing - NT - Kaitaia'             ) ;;
    (nt-mtedn)          inc+=(               --select='@listing - NT - Mt Eden'             ) ;;
    (nt-nshor)          inc+=(               --select='@listing - NT - North Shore'         ) ;;
    (nt-wheke)          inc+=(               --select='@listing - NT - Waiheke'             ) ;;
    (nt-whrei)          inc+=(               --select='@listing - NT - Whangarei'           ) ;;
    (nt-wkwth)          inc+=(               --select='@listing - NT - Warkworth'           ) ;;
    (nt-oseas)          inc+=(               --select='@listing - NT - overseas'            ) ;;
    (nt-elsew)          inc+=(               --select='@listing - NT - elsewhere'           ) ;;
    (nt-all)            inc+=(   --select-and-include='NT notice=!post NT everyone'         ) ;;
    (nt-news)           inc+=(   --select-and-include='NT news=!post NT news'               ) ;;
    (nt-minutes)        inc+=(   --select-and-include='NT minutes=!post NT minutes'         ) ;;
    (mtedn-minutes)     inc+=(   --select-and-include='MtEdn minutes=!post Mt Eden minutes' ) ;;
    (mtedn-everyone)    inc+=(     --optional-include='MtEdn info=@listing - NT - Mt Eden'  ) ;;
    (reminder)          inc+=(     --optional-include='reminder note=!post reminder'        ) ;;
    (has-email)         inc+=(     --optional-include='Email flyer=#has-email'              ) ;;
    (anzfn)             inc+=(   --select-and-include='ANZ Friends=!post NZ Friends'        ) ;;
    (go)                printf -v postlabels '%sQuakers/mailout/%(%Y%m)T/postlabels.pdf' "$HOME${HOME:+/}" "$now" ; opts+=( --output-mkdir=1 ) ;;
    (*)                 printf >&2 "Unknown option '%s'\n" "$x" ; exit 64 ;;
    esac
done

if ((use_sql))
then
    input_file=$sql_dsn
    postlabels=/tmp/qdb-$today-labels.pdf
    _=${sql_dsn:=dbi:}
else
    input_file=$current_gmail
    postlabels=${current_gmail%.csv}-labels.pdf
fi

if (( ask ))
then
    askyn 'Keep PDF' && {
        printf -v postlabels '%sQuakers/mailout/%(%Y%m/postlabels-%Y%m%d%H%M)T.pdf' "${HOME:+$HOME/}" -1
        opts+=( --output-mkdir=1 )
    }
    printf ' * Labels will be written to \e[33;1m%s\e[39;0m\n' "$postlabels"

    sel() {
        printf 'selecting people with tag "%s"\n' "$1"
        inc+=( --select="$1" )
    }

    selinc() {
        printf 'selecting people with tag "%s" and adding enclosure "%s"\n' "$2" "$1"
        inc+=( --select-and-include="$1=$2" )
    }

    optinc() {
        printf 'adding tag "%s for enclosure "%s""\n' "$2" "$1"
        inc+=( --optional-include=="$1=$2" )
    }

    printf 'Which recipients:\n'
    if askyn ' - whole country (#all)'
    then
        sel '#all'
    elif askyn ' - whole of NTMM (@listing - NT - *; @member - NT)'
    then
        sel '@member - NT'
        for i in 'Bay of Islands' Kaitaia 'Mt Eden' 'North Shore' Waiheke Warkworth Whangarei overseas elsewhere
        do
            sel "@listing - NT - $i"
        done
        sel '!post NT everyone'
    fi

    printf 'What enclosures:\n'
    askyn ' - NT everyone'     && selinc 'NT notice'     '!post NT everyone'
    askyn ' - NT news'         && selinc 'NT news'       '!post NT news'
    askyn ' - NT mins'         && selinc 'NT minutes'    '!post NT minutes'
    askyn ' - MtEdn mins'      && selinc 'MtEdn minutes' '!post Mt Eden minutes'
    askyn ' - MtEdn everyone'  && optinc 'MtEdn info'    '@listing - NT - Mt Eden'
    askyn ' - Reminder Note'   && optinc 'reminder note' '!post reminder'
    askyn ' - Email flyer'     && optinc 'Email flyer'   '#has-email'
    askyn ' - NZ Friends'      && selinc 'NZ Friends'    '!post NZ Friends'
else
    printf ' * Labels will be written to \e[33;1m%s\e[39;0m\n' "$postlabels"
fi

[[ $postlabels ]] && opts+=( --output="$postlabels" --force-overwrite )

file_downloads

"${libdir}"csvdump --labels "${inc[@]}" "${opts[@]}" "$input_file" &&
{ sleep 1 ; evince "$postlabels" <> /dev/null >&0 & }

exit $?

: <<\EoF
printf -v current_gmail '%sQuakers/db/google-%(%Y%m%d)T.csv' "$HOME/" -1
opts=(
        --paper=avery-l7160
        --preset=avery-l7160
     )

EoF
# vim: set nowrap :
