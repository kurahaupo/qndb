#!/bin/bash

. $HOME/Quakers/lib/qlib.bash

once=false

bookfile=

book_opts=()

for o do
    case $o in
    (-1|--once)                 once=true ;;
    (--loop)                    once=false ;;
    (-*)                        book_opts+=("$o") ;;
    (n)                         book_opts=() ;;
    (x)                         set -x ;;
    (*?)
        [[ $o = *[!ilamw]* && yes != "$o"* ]] && die EX_USAGE "Invalid option '$o'"
        [[ $o != *[!i]* && $o != *[!mw]* ]] && book_opts+=( --book-listing-all   )
        [[ $o != *[!i]* && $o != *[!aw]* ]] && book_opts+=( --book-listing-by-mm )
        [[ $o != *[!i]* && $o != *[!am]* ]] && book_opts+=( --book-listing-by-wg )
        [[ $o != *[!l]* && $o != *[!mw]* ]] && book_opts+=( --book-index-all     )
        [[ $o != *[!l]* && $o != *[!aw]* ]] && book_opts+=( --book-index-by-mm   )
        [[ $o != *[!l]* && $o != *[!am]* ]] && book_opts+=( --book-index-by-wg   )
        ;;
    esac
done

while
    desc=( "${book_opts[@]#--book-}" )
    desc=( "${desc[@]/?(ndex|isting)?(-by)-/x\/}" )
    $once || {
    printf >&2 'Book [%s]? ([il][amw]|yes|quit|help) ' "${desc[*]}"
    read oo && [[ $oo != @(q|quit|stop|exit|halt|fg) ]]
    }
do

    [[ help = "$oo"* && $oo = h* || $oo = '?'* ]] && { cat <<EndOfHelp ; continue ; }
bundles of letters:
 i - index
 l - listing
 a - unified (single group)
 m - group by MM
 w - group by WG
eg:
 iam wl - unified index, index by MM, listing by WG
 ia lmw - unified index, listing by MM, listing by WG
 i - unified index, index by MM, index by WG
 a - unified index & unified listing
EndOfHelp

    # make sure any new downloads are filed in proper locations
    file_downloads

    bookfile="${current_gmail%.csv}-book.pdf"
    cur_book_opts=( "${book_opts[@]}" )
    for o in $oo
    do
        [[ $o != *[!ilamwy]* || yes = "$o"* ]] || continue 2

        [[ $o != *[i]* && $o != *[mw]* ]] && cur_book_opts+=( --book-listing-all   )
        [[ $o != *[i]* && $o != *[aw]* ]] && cur_book_opts+=( --book-listing-by-mm )
        [[ $o != *[i]* && $o != *[am]* ]] && cur_book_opts+=( --book-listing-by-wg )
        [[ $o != *[l]* && $o != *[mw]* ]] && cur_book_opts+=( --book-index-all     )
        [[ $o != *[l]* && $o != *[aw]* ]] && cur_book_opts+=( --book-index-by-mm   )
        [[ $o != *[l]* && $o != *[am]* ]] && cur_book_opts+=( --book-index-by-wg   )
    done

    desc=( "${cur_book_opts[@]#--book-}" )
    desc=( "${desc[@]/?(ndex|isting)?(-by)-/x\/}" )
    printf >&2 'Book [%s] ...\n' "${desc[*]}"

    time ${libdir}csvdump --preset=book --skip-suppressed-listing "$current_gmail" "${cur_book_opts[@]}" -o - >| "$bookfile" &&
    { evince "$bookfile" <>/dev/null >&0 2>&0 3>&- 4>&- 5>&- 6>&- & }

    ((once)) && break
done
